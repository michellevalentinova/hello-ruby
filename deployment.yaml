# Load Balancer
apiVersion: v1
kind: Service
metadata:
  name: hello-ruby
  labels:
    app: hello-ruby

spec:
  type: LoadBalancer
  ports:
  - port: 80
    name: http
  - port: 443
    name: https

  selector:
    service: httpd

---
# Ruby APP container
apiVersion: v1
kind: ReplicationController
metadata:
  name: hello-ruby

spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: hello-ruby
        service: httpd

    spec:
      volumes:
      - name: secret-volume
        secret:
          secretName: nginxsecret

      containers:
      - name: hello-ruby
        image: nandi108/hello-ruby

        ports:
        - containerPort: 80
        - containerPort: 443

        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: secret-volume

        # deep check - this currently connects to Redis as well
        # doing the health check against the HTTPS port doesn't work, likely due to SSL certificate validation failure
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 1

---
# Expose Redis to the Ruby APP
# this also sets the service discovery environment variables
apiVersion: v1
kind: Service
metadata:
  name: hello-ruby-redis
  labels:
    app: hello-ruby

spec:
  type: NodePort
  ports:
  - port: 6379
  selector:
    service: redisd

---
# Redis container
apiVersion: v1
kind: ReplicationController
metadata:
  name: hello-ruby-redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: hello-ruby
        service: redisd

    spec:
      containers:
      - name: hello-ruby-redis
        image: nandi108/hello-ruby-redis
        ports:
        - containerPort: 6379

        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 1
